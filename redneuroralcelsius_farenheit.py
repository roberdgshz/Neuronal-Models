# -*- coding: utf-8 -*-
"""RedNeuroralCelsius-Farenheit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EeapIV8ySxnzxSburzfe3GA8SjbSQaID
"""

import tensorflow as tf
import numpy as np

celsius    = np.array([-40,-10, 0, 8,15,22, 38], dtype=float)
fahrenheit = np.array([-40, 14,32,46,59,72,100], dtype=float)

#capa = tf.keras.layers.Dense(units=1, input_shape=[1])
#modelo = tf.keras.Sequential([capa])

oculta1 = tf.keras.layers.Dense(units=3, input_shape=[1])
oculta2 = tf.keras.layers.Dense(units=3)
salida = tf.keras.layers.Dense(units=1)
modelo = tf.keras.Sequential([oculta1, oculta2, salida])

modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)

print("Starting training...")
log = modelo.fit(celsius, fahrenheit, epochs=1000, verbose=False)
print("Training completed!")

import matplotlib.pyplot as plt
plt.xlabel("# Epoch")
plt.ylabel("Measure loss")
plt.plot(log.history["loss"])

print("prediction 1:")
result = modelo.predict([33.0])
print("Result --->"+str(result)+" farenheit.")